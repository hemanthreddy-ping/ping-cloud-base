---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-cluster
spec:
  serviceName: elasticsearch
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      affinity:
        podAntiAffinity:
          # Add a hard requirement for each elastic-search pod to be deployed to a different node
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
            topologyKey: "kubernetes.io/hostname"
          # Add a soft requirement for each elastic-search pod to be deployed to a different AZ
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - elasticsearch
              topologyKey: "failure-domain.beta.kubernetes.io/zone"

      initContainers:
      - name: fix-permissions
        image: busybox
        command: [ "sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data" ]

        securityContext:
          privileged: true

        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data

      - name: increase-vm-max-map
        image: busybox
        command: [ "sysctl", "-w", "vm.max_map_count=262144" ]

        securityContext:
          privileged: true

      - name: increase-fd-ulimit
        image: busybox
        command: [ "sh", "-c", "ulimit -n 65536" ]

        securityContext:
          privileged: true

      - name: create-certs
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
        workingDir: /scripts
        command: ["sh", '$(CONTAINER_NAME).sh']

        securityContext:
          privileged: true

        env:
        - name: WAIT_FOR
          value: "efs-provisioner"
        - name: CONTAINER_NAME
          value: "create-certs"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SEED_HOSTS
          value: "${NODE_NAME}.elasticsearch"
        - name: CLUSTER_INITIAL_MASTER_NODES
          value: "${NODE_NAME}"
          ### Security disabled
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: XPACK_SECURITY_HTTP_SSL_ENABLED
          value: "false"
        - name: XPACK_SECURITY_TRANSPORT_SSL_ENABLED
          value: "false"
          ###
        - name: ES_PATH_CONF
          value: "/usr/share/elasticsearch/config"


        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
          readOnly: false
        - name: enrichment-shared-volume
          mountPath: /enrichment-shared-volume
          readOnly: false
        - name: enrichment-elasticsearch-yaml-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
          readOnly: true
        - name: enrichment-certs-config
          mountPath: /usr/share/elasticsearch/config/instances.yml
          subPath: instances.yml
          readOnly: true
        - name: enrichment-scripts
          mountPath: /scripts

      - name: create-passwords
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
        workingDir: /scripts
        command: ["sh", '$(CONTAINER_NAME).sh']

        # securityContext:
        #   runAsUser: 1000
        #   runAsGroup: 1000

        env:
        - name: CONTAINER_NAME
          value: "create-passwords"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SEED_HOSTS
          value: "${NODE_NAME}.elasticsearch"
        - name: CLUSTER_INITIAL_MASTER_NODES
          value: "${NODE_NAME}"
          ### Security disabled
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: XPACK_SECURITY_HTTP_SSL_ENABLED
          value: "false"
        - name: XPACK_SECURITY_TRANSPORT_SSL_ENABLED
          value: "false"
          ###
        - name: ES_PATH_CONF
          value: "/usr/share/elasticsearch/data/config"

        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
          readOnly: false
        - name: enrichment-shared-volume
          mountPath: /enrichment-shared-volume
          readOnly: false
        - name: enrichment-elasticsearch-yaml-config
          mountPath: /usr/share/elasticsearch/data/config/elasticsearch.yml
          subPath: elasticsearch.yml
          readOnly: true
        - name: enrichment-certs-config
          mountPath: /usr/share/elasticsearch/data/config/instances.yml
          subPath: instances.yml
          readOnly: true
        - name: enrichment-scripts
          mountPath: /scripts

      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
        workingDir: /scripts
        command: ["sh", '$(CONTAINER_NAME).sh']

        securityContext:
          runAsUser: 1000
          runAsGroup: 1000

        resources:
          limits:
            memory: 2Gi
            cpu: 1000m
          requests:
            memory: 512Mi
            cpu: 100m

        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP

        env:
        - name: CONTAINER_NAME
          value: "elasticsearch"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: XPACK_SECURITY_ENABLED
          value: "true"
        - name: XPACK_SECURITY_HTTP_SSL_ENABLED
          value: "false"
        - name: XPACK_SECURITY_TRANSPORT_SSL_ENABLED
          value: "false"
          ###
        - name: DISCOVERY_SEED_HOSTS
          value: "es-cluster-0.elasticsearch,es-cluster-1.elasticsearch,es-cluster-2.elasticsearch"
        - name: CLUSTER_INITIAL_MASTER_NODES
          value: "es-cluster-0,es-cluster-1,es-cluster-2"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: ES_PATH_CONF
          value: "/usr/share/elasticsearch/data/config"

        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: enrichment-shared-volume
          mountPath: /enrichment-shared-volume
          readOnly: false
        - name: enrichment-elasticsearch-yaml-config
          mountPath: /usr/share/elasticsearch/data/config/elasticsearch.yml
          subPath: elasticsearch.yml
          readOnly: false
        - name: enrichment-scripts
          mountPath: /scripts

      volumes:
        - name: enrichment-shared-volume
          nfs:
            server: ${EFS_FILESYSTEM_ID}.efs.${REGION}.amazonaws.com
            path: /
        - name: enrichment-scripts
          configMap:
            name: enrichment-scripts
            defaultMode: 0555
        - name: enrichment-elasticsearch-yaml-config
          configMap:
            name: enrichment-elasticsearch-yaml-config
        - name: enrichment-certs-config
          configMap:
            name: enrichment-certs-config
        - name: enrichment-elasticsearch-ilm-policies
          configMap:
            name: enrichment-elasticsearch-ilm-policies
        - name: enrichment-elasticsearch-index-bootstraps
          configMap:
            name: enrichment-elasticsearch-index-bootstraps
        - name: enrichment-elasticsearch-index-templates
          configMap:
            name: enrichment-elasticsearch-index-templates
        - name: enrichment-elasticsearch-role-bootstraps
          configMap:
            name: enrichment-elasticsearch-role-bootstraps
            
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: elasticsearch
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: elasticsearch-gp2
      resources:
        requests:
          storage: 10Gi

---
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  selector:
    app: elasticsearch
  clusterIP: None
  ports:
    - port: 9200
      name: rest
    - port: 9300
      name: inter-node

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: elasticsearch-io1
  labels:
    app: elasticsearch
provisioner: kubernetes.io/aws-ebs
parameters:
  type: io1
  fsType: ext4
  iopsPerGB: "50"
mountOptions:
  - discard

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: elasticsearch-gp2
  labels:
    app: elasticsearch
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: ext4
mountOptions:
  - discard
