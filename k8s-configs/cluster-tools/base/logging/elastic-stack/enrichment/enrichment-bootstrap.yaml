---
apiVersion: batch/v1
kind: Job
metadata:
  name: logging-bootstrap
spec:
  template:
    spec:
      serviceAccountName: enrichment
      containers:
      - name: logging-bootstrap
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-services/bootstrap/dev:v1.17-release-branch-latest
        imagePullPolicy: Always
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: logging-bootstrap-environment-variables
        volumeMounts:
          - mountPath: /app/config/app_config.yaml
            name: logging-bootstrap-resources
            subPath: logging-bootstrap-resources.yaml
            readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "300m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: OnFailure
      volumes:
      - name: logging-bootstrap-resources
        configMap:
          name: logging-bootstrap-resources
---
apiVersion: batch/v1
kind: Job
metadata:
  name: elasticsearch-bootstrap
spec:
  template:
    spec:
      serviceAccountName: enrichment
      containers:
      - name: elasticsearch-bootstrap
        image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap/dev:v1.17-release-branch-latest
        imagePullPolicy: Always
        workingDir: /scripts
        command: ["sh", '$(CONTAINER_NAME).sh']
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
        env:
        - name: CONTAINER_NAME
          value: "elasticsearch-bootstrap"
        - name: ES_PATH_CONF
          value: "/usr/share/elasticsearch/data/config"
        # Service checking related env vars
        - name: CHECK_SERVICE_URL
          value: "http://elasticsearch"
        - name: CHECK_SERVICE_PORT
          value: "9200"
        - name: DESIRED_STATUS
          value: "green"
        volumeMounts:
          - name: enrichment-elasticsearch-ilm-policies
            mountPath: /usr/share/elasticsearch/data/ilm-policies
          - name: enrichment-elasticsearch-index-bootstraps
            mountPath: /usr/share/elasticsearch/data/index-bootstraps
          - name: enrichment-elasticsearch-index-templates
            mountPath: /usr/share/elasticsearch/data/index-templates
        resources:
          requests:
            memory: "256Mi"
            cpu: "300m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: OnFailure
      volumes:
        - name: enrichment-elasticsearch-ilm-policies
          configMap:
            name: enrichment-elasticsearch-ilm-policies
        - name: enrichment-elasticsearch-index-bootstraps
          configMap:
            name: enrichment-elasticsearch-index-bootstraps
        - name: enrichment-elasticsearch-index-templates
          configMap:
            name: enrichment-elasticsearch-index-templates
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kibana-bootstrap
spec:
  template:
    spec:
      serviceAccountName: enrichment
      containers:
        - name: kibana-bootstrap
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap/dev:v1.17-release-branch-latest
          imagePullPolicy: Always
          workingDir: /scripts
          command: [ "sh", '$(CONTAINER_NAME).sh' ]
          env:
            - name: CONTAINER_NAME
              value: 'kibana-bootstrap'
            - name: KIBANA_URL
              value: 'http://kibana'
            - name: KIBANA_PORT
              value: '5601'
            - name: CHECK_KIBANA_URL
              value: "http://kibana:5601/api/status"
            - name: CHECK_ELASTICSEARCH_URL
              value: "http://elasticsearch:9200/_cluster/health"
            - name: RETRY_KIBANA_BOOTSTRAP_SEC
              value: "30"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: kibana-dashboard-pa
              mountPath: /scripts/dashboards/pa.ndjson
              subPath: pa.ndjson
            - name: kibana-dashboard-pd
              mountPath: /scripts/dashboards/pd.ndjson
              subPath: pd.ndjson
            - name: kibana-dashboard-pf
              mountPath: /scripts/dashboards/pf.ndjson
              subPath: pf.ndjson
            - name: kibana-dashboard-pf-basic
              mountPath: /scripts/dashboards/pf-basic.ndjson
              subPath: pf-basic.ndjson
            - name: kibana-dashboard-pa-was-basic
              mountPath: /scripts/dashboards/pa-was-basic.ndjson
              subPath: pa-was-basic.ndjson
            - name: enrichment-elasticsearch-index-templates
              mountPath: /scripts/index-templates
            - name: kibana-alerts
              mountPath: /scripts/alerts
          resources:
            requests:
              memory: "256Mi"
              cpu: "300m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      restartPolicy: OnFailure
      volumes:
        - name: kibana-dashboard-pa
          configMap:
            name: kibana-dashboard-pa
        - name: kibana-dashboard-pd
          configMap:
            name: kibana-dashboard-pd
        - name: kibana-dashboard-pf
          configMap:
            name: kibana-dashboard-pf
        - name: kibana-dashboard-pf-basic
          configMap:
            name: kibana-dashboard-pf-basic
        - name: kibana-dashboard-pa-was-basic
          configMap:
            name: kibana-dashboard-pa-was-basic
        - name: kibana-alerts
          configMap:
            name: kibana-alerts
        - name: enrichment-elasticsearch-index-templates
          configMap:
            name: enrichment-elasticsearch-index-templates